-

for next update(s)? {
    pulse rifle
    flux knives
    give the glaive a light source paired with energy
    
    proper tool tip for fp-containing objects
    
} then {
    customizable elements for pulse weapons (via configurator)
    give Pulsestrike Glaive a secondary that isn't just the combo finisher
    maybe an alt finisher to main fire combo if buffered during?
    rework phase drill to be tiered and also maybe a dynitem
    have all recipes unlocked by default
    pulse chakram similar to razorwave
}

? hook engine {
    included by replaced util.lua
    hijacks the first setting of _ENV.init to hook into core tables (widget, player etc.)
}

! TRADING SYSTEM {
    part of stardustlib; basically Path of Exile's trade UI
    quickbar button puts an item in cursor; clicking on a player prompts them to accept/reject trade, via playerext
    right click dismisses without trading, and emits a sound effect to the player (might need UI shenanigans for local sfx?)
    cursor item should make it look like a trade-icon cursor, if that's achievable
    on (unexpected) uninit, spawn a stagehand at player position that lasts for ~.5sec and deletes cursor item from anywhere it can find
    (consume item drops, consume from containers within reach, consume from player inventory)
}

sb.jsonQuery exists, adjust itemutil.property?

turn the liquid accumulator (phase drill, excavate) into a prefab

configurable tram stop {
  built-in player sensor
}

reserve material ID range somewhere
semigloss black hull panel

/ figure out how the feck to detect if shift is held (done hackishly, but at least it's there)
implement slot-drop? drop into empty space, or maybe the selection icon area?
somewhat redesign UI to make better use of now-unneeded tooltip area

TERMINAL THEMABILITY?
make terminal not update every tick just for animation if it's not waiting on any players

x BYOS functionality as machine { // probably incompatible with FU's version
    damageTileArea with ridiculously high strength and harvest level and radius big enough to cover a t8 vanilla ship from one end, in both fg and bg
    itemDropQuery and collect into database
    upgrade player ship to custom tier to get rid of bg image and collision material
    force-kill objects set "residual" by Hacking them and using object.smash
}
patch warp state matching into encounter variations of booster flames (/objects/ship/boosters/)
add distinguishing names to even/odd small booster flames
lots of shiny new ship components, especially animating ones that match their state to flight {
    warp cores should count as FU ones, if possible
}

move tag patches to stardustlib and add some more {
    "component", "material" etc.
}

power stuffs {
    nanofield {
        elytra {
            use an actual item
        }
    }
    
    Resonite Reactor!
    
    - fix phase drill aim compensation (beam start)
    (...and flashlight)

    fluxsaber (fluxpulse-charged beamsword)
    pulse rifle (machine gun), vector rifle (railgun)
    artemis bow?
    
    maybe a way to add a pulse battery to stock equipment
    
    powered lamp that fills a large region with full-bright light (basically volumetric lighting at the cost of fp)
    
    more smelter-type machines
    ^ chance bias stat (inverse exponent to random number)
    
    prefix and move power categories to stardustlib?
    
    eventually make transmatter network require power (after rewrite)
}

compost bin that makes food age faster, for use as biofuel
^ some sort of powered processor to make (liquid) biodiesel?

renamer (custom shortdescription, put vanilla one as category because tooltip)

some item transport for automation (and library to make use of input/output configuration)
networked wire I/O ports

metaGUI details {
    icon support for buttons
    - pane icon
    screen anchor
    
    close on world change, by default
    
    - event subcription system (subscriptions stored within widget)
    give scrollarea a "thumb mode" when middle click dragging
    standard way of halting scrollarea velocity
    findParent(type)
    - fix subwidget mouseover weirdness?
    
    eventually {
        debug console pane via common-table
        autoInteract for item slots
        rework preferredSize to take both a width and a height?
        can detect shift+click by polling item pickup and replacing {
            how to determine "active" pane?
            negotiate peer-to-peer; only most-active polls
            last interacted? hmm.
            maybe require only a single polling pane to be open
            exclude anything with a "systemItem" tag (nanofield static, shift-click helpers...)
        }
        can use knowledge of window position to make mouse-relative context menus
        generator scripts?
        unique by tag
    }
    
    widgets needed {
        - canvas
        - label
        - image
        - item slot
        - item grid
        - scrollarea
        - panel (flat, concave or convex)
        checkbox
        option box?
        > list item
        
        text box {
            hybrid of horizontal scrollarea and label with input handling
            needs some way of checking the relative mouse position
        }
        
        tab field! {
            probably layout with a set of panels, attached to a scrollable area of basically dressed-up buttons
            tabs on any edge or hidden (can be manually flipped through)
            event onTabChanged
        }
    }
    
    - should probably add to quickbar
    
    > need universal container proxy as well (transmat terminal and such)
    for container proxy: {
        use ipc lib (getmetatable '' and all)
        host can check for itembag changes every frame and push an event
    }
}

ipc lib {
    weakly-keyed by _ENV for automatic cleanup
}

Extend sync library {
    //Recognize RpcPromise returning another RpcPromise and replace in queue
    
    actually, response system with a proper response-message instead of just an RpcPromise
    generate responseID with makeuuid? register with an anonymous function for continuation of operation after response
    
    coroutine-based things? ...
    
    fixed sync registry (register callback ahead of time; optional automatic timer)
}

Aetheri species mod {
    
    Androgynous, fullbright "core" (novakid male minus chest definition, with Avian-ish talons) with crystalline plates on top
    (part of innate armor); hue and brightness sliders for core, fine-grained control over what plates you have
    
    AP sharing?
    "aether channeling" for particular weapon types (back up energy bar using aether when wielding specific weapon types)
    
    figure out crit conditions for innates other than sniper
    actually put crit multiplier somewhere on the tree
    crit rate (multiplier on base chance, bonus timing length etc.)
    
    make flight in air use aether; place behind unlock, add efficiency stat
    
    Innates {
        ! standardize on a separate tag (energyColor?) for replace directives
        
        Kinetic Burst {
            refine secondary, place after unlock?
            different secondary in water and zero-g?
        }
        Sniper Shot {
            give it a final name!
            figure out a secondary; overheat shot?
        }
        Shatterflurry? Shredflurry? rapid fire spread salvo similar to Terraria's Crystal Storm
        Fireball
        Charge Cannon (roughly mega man X style; secondary could be a melee attack?)
        PUNCHY PUNCH
        Shield Spheres {
            kind of like magnorbs meets Mega Man shield weapons (or Mei's tears from that BoI:A+ mod)
            primary to fire them off, secondary to make them spin faster and deflect projectiles
            maybe always active with knockback but not damage? takes yeeting them off to actually dps
        }
        Artemis Bow - both single (piercing?) and spread shots
        Shatterpulse - wide radial pulse that cuts armor down but doesn't do much damage
    }
    
    Skill tree {
        "node keys" (catalysts?) dropped rarely by mobs depending on level, used as gate costs
        use a vault key to gate off some lategame clusters
        item for refunding nodes (stone of reattunement?)
    }
    
    Hunger system {
        Stat locked so that food doesn't replenish; instead, it's based on exposure to the stars
        Regenerates in about a minute when exposed to sun or starlight; 2-3x faster while on ship
    }
}

// Transmatter network reimplementation { // not sure if it's needed or if drive bays just need further fixing up
    Controller {
        API {
            callable via both callScriptedEntity and sendEntityMessage
            each request runs as a coroutine placed on a queue for suspendability and environment cleanliness
            
            ...
        }
        Network Scan Module {
            periodically scans the network pool, assembles the list of storage devices and notifies peripherals
        }
    }
}
