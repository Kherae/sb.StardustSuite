{ //  -*- grammar-ext: json -*-
  "style" : "window", // window (has titlebar), panel (just a frame) etc.
  "size" : [240, 160], // *internal* size (not including chrome)
  "title" : "metaGUI example pane",
  "some info" : "goes here",
  // unique id? bound?
  "layoutModes" : "horizontal",
  // implicit layout stacking by nesting arrays (if outermost is vertical, then next in is treated as horizontal etc.)
  // layout properties can be specified as first object within (if "type" not specified)
  // most notably, "span"
  "children" : [
    // color attribute: none (default, generally gray), accent (window accent color), color name(?) or hexcode
    { "type" : "button", "id" : "btn", "caption" : "This is a button." },
    [ {"type":"label","inline":true,"text":"Stuff:","id":"inl"}, { "type" : "button", "caption" : "A row of buttons..." }, { "type" : "button", "caption" : "...in proper layout." }, [{"size":28}, {"type":"button","caption":"fixed!"}] ],
    { "type" : "button", "id" : "btn", "caption" : "This one has an ^accent;accent color^reset;.", "color" : "accent" },
    { "type" : "label", "text" : "We have ^accent;labels^reset;..." },
    { "type" : "label", "text" : "...including ^cyan;aligned^reset; ones.", "align" : "right" },
    "spacer",
    [ { "type" : "button", "caption" : "It even supports layout spacers!", "id" : "btnSpacer" } ]
    //[ ["lol"], ["lol"] ], ["lol"]
  ]
}
